{"version":3,"sources":["test/setRenderSpy.ts"],"names":[],"mappings":";;AACA,6BAA+B;AAE/B;;;;GAIG;AACH,sBAA6B,OAA+B;IAC1D,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC;IAC/C,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,GAAG,CAAC;IAChC,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAJD,oCAIC","file":"test/setRenderSpy.js","sourcesContent":["import { ReactWrapper } from 'enzyme';\nimport * as sinon from 'sinon';\n\n/**\n * Replaces the enzyme render function with a spy that can be used to count how many\n * times the render function was called in a test.\n * @param wrapper - The wrapper around the component instance for which you want to spy upon\n */\nexport function setRenderSpy(wrapper: ReactWrapper<any, any>): sinon.SinonSpy {\n  let spy = sinon.spy(wrapper.instance().render);\n  wrapper.instance().render = spy;\n  return spy;\n}"],"sourceRoot":"../../src"}
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "./index", "react"], function (require, exports, index_1, React) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /* tslint:enable:no-unused-variable */
    var ButtonVPage = (function (_super) {
        __extends(ButtonVPage, _super);
        function ButtonVPage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ButtonVPage.prototype.render = function () {
            var iconName = 'Snow';
            return React.createElement("div", null,
                React.createElement("div", null,
                    React.createElement("label", null, " Default Button:   "),
                    React.createElement(index_1.DefaultButton, { id: 'DefaultButton', icon: 'Add', text: 'Default Button' })),
                React.createElement("div", null,
                    React.createElement("label", null, " Default Button Disabled:   "),
                    "\u00A0",
                    React.createElement(index_1.DefaultButton, { id: 'DefaultButtonDisabled', disabled: true, icon: 'Add', text: 'Default Button' })),
                "\u00A0",
                React.createElement("div", { style: { backgroundColor: 'white' } },
                    React.createElement(index_1.IconButton, { id: 'IconButton', iconProps: { iconName: iconName } })),
                "\u00A0",
                React.createElement("div", { style: { backgroundColor: 'white' } },
                    React.createElement(index_1.CommandButton, { id: 'CommandButton', icon: 'AddFriend', text: 'Command Button' })),
                "\u00A0",
                React.createElement("div", { style: { backgroundColor: 'white' } },
                    React.createElement(index_1.CommandButton, { id: 'CommandButtonDisabled', icon: 'AddFriend', disabled: true, text: 'Command Button' })),
                "\u00A0",
                React.createElement("div", null,
                    React.createElement(index_1.CompoundButton, { id: 'CompoundButton', description: 'You can create a new account here.', text: 'Compound Button' })),
                "\u00A0",
                React.createElement("div", null,
                    React.createElement(index_1.CompoundButton, { id: 'CompoundButtonDisabled', disabled: true, description: 'You can create a new account here.', text: 'Compound Button' })),
                "\u00A0",
                React.createElement("div", null,
                    React.createElement(index_1.PrimaryButton, { id: 'PrimaryButton', icon: 'Add', text: 'Primary Button' })),
                "\u00A0",
                React.createElement("div", null,
                    React.createElement(index_1.PrimaryButton, { id: 'PrimaryButtonDisabled', disabled: true, icon: 'Add', text: 'Primary Button' })),
                "\u00A0",
                React.createElement("div", null,
                    React.createElement(index_1.DefaultButton, { id: 'ContextualButton', disabled: false, icon: 'Add', text: 'New', menuProps: {
                            className: 'ContextualButtonMenu',
                            id: 'ContextualButtonMenu',
                            items: [
                                {
                                    key: 'emailMessage',
                                    name: 'Email message',
                                    icon: 'Mail'
                                },
                                {
                                    key: 'calendarEvent',
                                    name: 'Calendar event',
                                    icon: 'Calendar'
                                }
                            ]
                        } })));
        };
        return ButtonVPage;
    }(React.Component));
    exports.default = ButtonVPage;
});

//# sourceMappingURL=ButtonPage.visualtest.js.map

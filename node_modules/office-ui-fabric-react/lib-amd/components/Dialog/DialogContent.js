var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define(["require", "exports", "react", "../../Utilities", "../../Button", "./DialogFooter", "../../utilities/decorators/withResponsiveMode", "./Dialog.scss"], function (require, exports, React, Utilities_1, Button_1, DialogFooter_1, withResponsiveMode_1, stylesImport) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var styles = stylesImport;
    var DialogContent = (function (_super) {
        __extends(DialogContent, _super);
        function DialogContent(props) {
            var _this = _super.call(this, props) || this;
            _this.state = {
                id: Utilities_1.getId('Dialog'),
            };
            return _this;
        }
        DialogContent.prototype.render = function () {
            var _a = this.props, showCloseButton = _a.showCloseButton, closeButtonAriaLabel = _a.closeButtonAriaLabel, onDismiss = _a.onDismiss, subText = _a.subText, title = _a.title;
            var id = this.state.id;
            var groupings = this._groupChildren();
            var subTextContent;
            if (subText) {
                subTextContent = React.createElement("p", { className: Utilities_1.css('ms-Dialog-subText', styles.subText), id: id + '-subText' }, subText);
            }
            return (React.createElement("div", null,
                React.createElement("div", { className: Utilities_1.css('ms-Dialog-header', styles.header) },
                    React.createElement("p", { className: Utilities_1.css('ms-Dialog-title', styles.title), id: id + '-title', role: 'heading' }, title),
                    React.createElement("div", { className: Utilities_1.css('ms-Dialog-topButton', styles.topButton) },
                        this.props.topButtonsProps.map(function (props) { return (React.createElement(Button_1.IconButton, __assign({}, props))); }),
                        React.createElement(Button_1.IconButton, { className: Utilities_1.css('ms-Dialog-button ms-Dialog-button--close', styles.button, (_b = {}, _b[styles.isClose] = !showCloseButton, _b)), iconProps: { iconName: 'Cancel' }, ariaLabel: closeButtonAriaLabel, onClick: onDismiss }))),
                React.createElement("div", { className: Utilities_1.css('ms-Dialog-inner', styles.inner) },
                    React.createElement("div", { className: Utilities_1.css('ms-Dialog-content', styles.content, this.props.className) },
                        subTextContent,
                        groupings.contents),
                    groupings.footers)));
            var _b;
        };
        // @TODO - typing the footers as an array of DialogFooter is difficult because
        // casing "child as DialogFooter" causes a problem because
        // "Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other."
        DialogContent.prototype._groupChildren = function () {
            var groupings = {
                footers: [],
                contents: []
            };
            React.Children.map(this.props.children, function (child) {
                if (typeof child === 'object' && child !== null && child.type === DialogFooter_1.DialogFooter) {
                    groupings.footers.push(child);
                }
                else {
                    groupings.contents.push(child);
                }
            });
            return groupings;
        };
        return DialogContent;
    }(Utilities_1.BaseComponent));
    DialogContent.defaultProps = {
        showCloseButton: false,
        className: '',
        topButtonsProps: []
    };
    DialogContent = __decorate([
        withResponsiveMode_1.withResponsiveMode
    ], DialogContent);
    exports.DialogContent = DialogContent;
});

//# sourceMappingURL=DialogContent.js.map

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define(["require", "exports", "react", "../../Utilities", "../../FocusZone", "./OverflowSet.scss"], function (require, exports, React, Utilities_1, FocusZone_1, stylesImport) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var styles = stylesImport;
    var OverflowSet = (function (_super) {
        __extends(OverflowSet, _super);
        function OverflowSet() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        OverflowSet.prototype.render = function () {
            var _a = this.props, items = _a.items, overflowItems = _a.overflowItems, onRenderOverflowButton = _a.onRenderOverflowButton;
            var overflowButtonProps = {
                menuProps: { items: overflowItems }
            };
            return (React.createElement(FocusZone_1.FocusZone, { className: Utilities_1.css('ms-OverflowSet', styles.root), direction: FocusZone_1.FocusZoneDirection.horizontal, role: 'menubar' },
                items && this._onRenderItems(items),
                overflowItems.length && onRenderOverflowButton(overflowButtonProps)));
        };
        OverflowSet.prototype._onRenderItems = function (items) {
            var _this = this;
            return items.map(function (item, i) {
                var key = item.key ? item.key : i;
                return (React.createElement("div", { key: key, className: Utilities_1.css('ms-OverflowSet-item', styles.item) }, _this.props.onRenderItem(item)));
            });
        };
        return OverflowSet;
    }(Utilities_1.BaseComponent));
    __decorate([
        Utilities_1.autobind
    ], OverflowSet.prototype, "_onRenderItems", null);
    exports.OverflowSet = OverflowSet;
});

//# sourceMappingURL=OverflowSet.js.map

{"version":3,"sources":["components/ResizeGroup/ResizeGroup.tsx"],"names":[],"mappings":"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","file":"components/ResizeGroup/ResizeGroup.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  css,\r\n  BaseComponent\r\n} from '../../Utilities';\r\nimport { IResizeGroupProps } from './ResizeGroup.Props';\r\nimport styles = require('./ResizeGroup.scss');\r\n\r\nconst RESIZE_DELAY = 16;\r\n\r\nexport interface IResizeGroupState {\r\n\r\n  /**\r\n   * Current set of data being measured to determine fit\r\n  */\r\n  measuredData: any;\r\n\r\n  /**\r\n   * Final data used to render proper sized component\r\n  */\r\n  renderedData?: any;\r\n\r\n  /**\r\n   * A flag to determine if a new measurement should be made upon state change\r\n  */\r\n  shouldMeasure?: boolean;\r\n}\r\n\r\nexport class ResizeGroup extends BaseComponent<IResizeGroupProps, IResizeGroupState> {\r\n\r\n  public static defaultProps = {\r\n    data: {}\r\n  };\r\n\r\n  private _root: HTMLElement;\r\n  private _measured: HTMLElement;\r\n\r\n  constructor(props: IResizeGroupProps) {\r\n    super(props);\r\n    this.state = {\r\n      shouldMeasure: true,\r\n      renderedData: null,\r\n      measuredData: { ...this.props.data },\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IResizeGroupProps) {\r\n    if (this.props.data !== nextProps.data) {\r\n      this.setState({\r\n        shouldMeasure: true,\r\n        renderedData: null,\r\n        measuredData: { ...nextProps.data }\r\n      });\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._measureItems();\r\n    this._events.on(window, 'resize', this._async.debounce(this._onResize, RESIZE_DELAY, { leading: true }));\r\n  }\r\n\r\n  public render() {\r\n    const { onRenderData, data } = this.props;\r\n    const { shouldMeasure, renderedData, measuredData } = this.state;\r\n\r\n    if (Object.keys(data).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={ css('ms-ResizeGroup') } ref={ this._resolveRef('_root') }>\r\n        { shouldMeasure && (\r\n          <div className={ css(styles.measured) } ref={ this._resolveRef('_measured') }>\r\n            { onRenderData(measuredData) }\r\n          </div>\r\n        ) }\r\n\r\n        { renderedData && onRenderData(renderedData) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IResizeGroupProps) {\r\n    this._measureItems();\r\n  }\r\n\r\n  private _onResize() {\r\n    this.setState({ shouldMeasure: true });\r\n  }\r\n\r\n  private _measureItems() {\r\n    const { data, onReduceData } = this.props;\r\n    const { shouldMeasure } = this.state;\r\n\r\n    if (shouldMeasure && Object.keys(data).length !== 0 && this._root && this._measured) {\r\n      const container = this._root.getBoundingClientRect();\r\n      const measured = this._measured.getBoundingClientRect();\r\n      if ((measured.width > container.width)) {\r\n        let nextMeasuredData = onReduceData(this.state.measuredData);\r\n\r\n        // We don't want to get stuck in an infinite render loop when there are no more\r\n        // scaling steps, so implementations of onReduceData should return undefined when\r\n        // there are no more scaling states to apply.\r\n        if (nextMeasuredData !== undefined) {\r\n          this.setState({\r\n            measuredData: nextMeasuredData,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            shouldMeasure: false\r\n          });\r\n        }\r\n\r\n      } else {\r\n        this.setState((prevState, props) => {\r\n          return {\r\n            renderedData: prevState.measuredData,\r\n            measuredData: { ...this.props.data },\r\n            shouldMeasure: false\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
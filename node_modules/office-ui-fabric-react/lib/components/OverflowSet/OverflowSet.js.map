{"version":3,"sources":["components/OverflowSet/OverflowSet.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,6CAIyB;AAGzB,6CAAgE;AAEhE,iDAAmD;AACnD,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC;IAAiC,+BAAsC;IAAvE;;IAgCA,CAAC;IA9BQ,4BAAM,GAAb;QACM,IAAA,eAIU,EAHZ,gBAAK,EACL,gCAAa,EACb,kDAAsB,CACT;QAEf,IAAM,mBAAmB,GAAiB;YACxC,SAAS,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;SACpC,CAAC;QAEF,MAAM,CAAC,CACL,oBAAC,qBAAS,IAAC,SAAS,EAAG,eAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,SAAS,EAAG,8BAAkB,CAAC,UAAU,EAAG,IAAI,EAAC,SAAS;YAClH,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YACnC,aAAa,CAAC,MAAM,IAAI,sBAAsB,CAAC,mBAAmB,CAAC,CAC3D,CACb,CAAC;IACJ,CAAC;IAGO,oCAAc,GAAtB,UAAuB,KAAY;QADnC,iBAUC;QARC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,CACL,6BAAK,GAAG,EAAG,GAAG,EAAG,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,IAAI,CAAC,IAChE,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAC3B,CACP,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IACH,kBAAC;AAAD,CAhCA,AAgCC,CAhCgC,yBAAa,GAgC7C;AAVC;IADC,oBAAQ;iDAUR;AA/BU,kCAAW","file":"components/OverflowSet/OverflowSet.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  css,\r\n  autobind,\r\n  BaseComponent\r\n} from '../../Utilities';\r\nimport { IButtonProps } from '../../Button';\r\nimport { IOverflowSetProps } from './OverflowSet.Props';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\n\r\nimport * as stylesImport from './OverflowSet.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport class OverflowSet extends BaseComponent<IOverflowSetProps, null> {\r\n\r\n  public render() {\r\n    let {\r\n      items,\r\n      overflowItems,\r\n      onRenderOverflowButton\r\n    } = this.props;\r\n\r\n    const overflowButtonProps: IButtonProps = {\r\n      menuProps: { items: overflowItems }\r\n    };\r\n\r\n    return (\r\n      <FocusZone className={ css('ms-OverflowSet', styles.root) } direction={ FocusZoneDirection.horizontal } role='menubar' >\r\n        { items && this._onRenderItems(items) }\r\n        { overflowItems.length && onRenderOverflowButton(overflowButtonProps) }\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderItems(items: any[]): JSX.Element[] {\r\n    return items.map((item, i) => {\r\n      let key = item.key ? item.key : i;\r\n      return (\r\n        <div key={ key } className={ css('ms-OverflowSet-item', styles.item) }>\r\n          { this.props.onRenderItem(item) }\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
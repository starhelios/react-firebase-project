"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/* tslint:disable:no-unused-variable */
var React = require("react");
/* tslint:enable:no-unused-variable */
var Utilities_1 = require("office-ui-fabric-react/lib/Utilities");
var Button_1 = require("office-ui-fabric-react/lib/Button");
var Link_1 = require("office-ui-fabric-react/lib/Link");
var OverflowSet_1 = require("office-ui-fabric-react/lib/OverflowSet");
var stylesImport = require("./OverflowSet.Example.scss");
var styles = stylesImport;
var OverflowSetBasicExample = (function (_super) {
    __extends(OverflowSetBasicExample, _super);
    function OverflowSetBasicExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OverflowSetBasicExample.prototype.render = function () {
        return (React.createElement(OverflowSet_1.OverflowSet, { items: [
                {
                    key: 'item1',
                    name: 'Link 1',
                    ariaLabel: 'New. Use left and right arrow keys to navigate',
                    onClick: function () { return; },
                },
                {
                    key: 'item2',
                    name: 'Link 2',
                    onClick: function () { return; },
                },
                {
                    key: 'item3',
                    name: 'Link 3',
                    onClick: function () { return; }
                }
            ], overflowItems: [
                {
                    key: 'item4',
                    name: 'Overflow Link 1',
                    onClick: function () { return; }
                },
                {
                    key: 'item5',
                    name: 'Overflow Link 2',
                    onClick: function () { return; }
                }
            ], onRenderOverflowButton: function (buttonProps) {
                return (React.createElement(Button_1.IconButton, { className: Utilities_1.css(styles.overflowButton), iconProps: { iconName: 'More' }, menuIconProps: null, menuProps: buttonProps.menuProps }));
            }, onRenderItem: function (item) {
                return (React.createElement(Link_1.Link, { className: Utilities_1.css(styles.overflowLinks), onClick: item.onClick }, item.name));
            } }));
    };
    return OverflowSetBasicExample;
}(Utilities_1.BaseComponent));
exports.OverflowSetBasicExample = OverflowSetBasicExample;

//# sourceMappingURL=OverflowSet.Basic.Example.js.map
